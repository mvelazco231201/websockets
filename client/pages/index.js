import { Button } from "@chakra-ui/button";
import { Input } from "@chakra-ui/input";
import { Box, HStack, Text } from "@chakra-ui/layout";
import Head from "next/head";
import { useState } from "react";
import { useForm } from "react-hook-form";
import { io } from "socket.io-client";

const socket = io("http://localhost:8080");

export default function Home() {
  const { handleSubmit, register } = useForm();
  const [message, setMessage] = useState([]);

  socket.on("listItems", (text) => {
    setMessage(text);
  });

  function onSubmit({ name, description, dateCreation }) {
    socket.emit("add", { status: "active", name, description, dateCreation });
  }

  function deleteItem(index) {
    socket.emit("delete", index);
  }

  function changeStatus(index) {
    socket.emit("changeStatus", index);
  }

  /*function update({ dateFinish }){
    socket.emit("update", {dateFinish});
  }*/

  return (
    <>
      <Head>
        <title>ToDo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box w="100vw" maxW="100vw" minH="100vh" bg="#eee" p="2rem">
        <Box
          as="form"
          maxW="50%"
          m="0 auto"
          onSubmit={handleSubmit(onSubmit)}
          mb="1rem"
        >
          <HStack>
            <Input bg="white" placeholder="Name" {...register("name")} isRequired></Input>
            <Input bg="white" placeholder= "Descripcion" {...register("description")} isRequired></Input>
            <Input bg="white" placeholder= "año/mes/día" {...register("dateCreation")} isRequired></Input>
            <Button colorScheme="blue" type="submit">
              Añadir
            </Button>
          </HStack>
        </Box>

        {message.length > 0 &&
          message.map(({ name, description, dateCreation, status }, index) => (
            <HStack
              key={index}
              gridGap="1rem"
              mb="1rem"
              _hover={{ bg: "gray.200" }}
            >
              <Text>Nombre: {name}</Text>
              <Text>Descripción: {description}</Text>
              <Text>Fecha Creación: {dateCreation}</Text>
              <Text>Status: {status}</Text>
              <Button colorScheme="green" onClick={() => changeStatus(index)}>
                Cambiar Estado
              </Button>
              <Button colorScheme="red" onClick={() => deleteItem(index)}>
                Borrar
              </Button>
            </HStack>
          ))}
      </Box>
    </>
  );
}
